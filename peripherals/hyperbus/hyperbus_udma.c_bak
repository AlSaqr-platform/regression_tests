#include <stdio.h>
#include "pulp.h"
#include <stdint.h>
#include "./hyperbus_test.h"

#define BUFFER_SIZE 32


int main() {

    int tx_buffer[BUFFER_SIZE],rx_buffer[BUFFER_SIZE];
    int a;
    int *p;
    int hyper_addr;
    int error =0;
    int id1, id2;
    udma_hyper_setup();
    //printf(" current frequency %d \n", __rt_freq_periph_get());
   
    for (int i=0; i< (BUFFER_SIZE); i++)
    {
        tx_buffer[i] = 0xffff0000+i;
    } 
    hyper_addr = 1;
    printf("hyper_addr: %d \n", hyper_addr);
    id1=udma_hyper_id_alloc();
    udma_hyper_dwrite((BUFFER_SIZE*4),(unsigned int) hyper_addr, (unsigned int)tx_buffer, 128,id1);
    printf("BUSY: %d ID:%d \n", udma_hyper_busy(id1), id1);
    //udma_hyper_wait(0);
    //printf("BUSY: %d \n", udma_hyper_busy(0));
    id2=udma_hyper_id_alloc();
    udma_hyper_dread((BUFFER_SIZE*4),(unsigned int) hyper_addr, (unsigned int)rx_buffer, 128,id2);
    printf("BUSY: %d, ID:%d \n", udma_hyper_busy(id2),id2);
    udma_hyper_wait(id2);

for (int i=0; i< BUFFER_SIZE; i++)
  {      
   if(rx_buffer[i]!=tx_buffer[i]){
      printf("rx_buffer[%d] = %x \n", i, rx_buffer[i]);
      error++;
   }
}

if(error!=0) printf("error \n");
else printf("ok\n");

printf("Fin. \n");
return 0;
  
    
}

